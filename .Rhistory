rm(sub_list)
rm(sublist_name)
supermarket <- "PNM_supermercados_2007-2023.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map(read_excel,
path = path)
sub_list <- lapply(supermarket, as.data.frame)
names(supermarket)
for (i in 1:length(sub_list)){
sublist_name <- names(sub_list)[i]
assign(sublist_name, sub_list[[i]])
}
colnames(ABARROTES) <- colnames(ABARROTES) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(GRANOS)<- colnames(GRANOS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(CARNICOS)<- colnames(CARNICOS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(HORTALIZAS)<- colnames(HORTALIZAS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(FRUTAS)<- colnames(FRUTAS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
clean_supermarket_prices <- sqldf("SELECT * FROM ABARROTES
JOIN GRANOS
USING(FechaProducto)
JOIN CARNICOS
USING(FechaProducto)
JOIN HORTALIZAS
USING(FechaProducto)
JOIN FRUTAS
USING(FechaProducto)
")
rm(ABARROTES)
rm(GRANOS)
rm(FRUTAS)
rm(CARNICOS)
rm(HORTALIZAS)
rm(sub_list)
rm(sublist_name)
View(clean_supermarket_prices)
View(clean_supermarket_prices)
sqldf("SELECT COALESCE(*) FROM clean_supermarket_prices")
variances <- sapply(clean_supermarket_prices, var)
print(variances)
typeof(clean_supermarket_prices$Aceite__Litro)
var(clean_supermarket_prices$Aceite__Litro)
var(clean_supermarket_prices$Aceite__Litro, na.rm = TRUE, correct = FALSE)
var(clean_supermarket_prices$Aceite__Litro, na.rm = TRUE)
mad(clean_supermarket_prices$Aceite__Litro, na.rm = TRUE)
variances <- sapply(subset(clean_supermarket_prices, select = -FechaProducto), mad )
variances <- sapply(subset(clean_supermarket_prices, select = -FechaProducto), mad(na.rm = TRUE) )
variances <- sapply(subset(x=  clean_supermarket_prices, select = -FechaProducto), mad(x,na.rm = TRUE) )
test <- sapply( subset(clean_supermarket_prices, select = -FechaProducto), mad, na.rm = TRUE)
print(test)
print(order(test))
order(print(test)))
source("C:/Users/Dell Latitud E7450/Desktop/UberTest/UberAnalysis.R", echo=TRUE)
supermarket <- "PNM_supermercados_2007-2023.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map(read_excel,
path = .)
#External data: Supermarkets price monitoring, source: CNP https://www.cnp.go.cr/sim/Precios_Nac_Mensuales.aspx
path <- "PNM_supermercados_2007-2023.xlsx"
supermarket <- path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel,
path = path)
source("C:/Users/Dell Latitud E7450/Desktop/UberTest/UberAnalysis.R", echo=TRUE)
names(supermarket_price_variability) <- colnames(subset(clean_supermarket_prices, select = -FechaProducto))
#Grouping all prices into a single table
clean_supermarket_prices <- sqldf("SELECT * FROM ABARROTES
JOIN GRANOS
USING(FechaProducto)
JOIN CARNICOS
USING(FechaProducto)
JOIN HORTALIZAS
USING(FechaProducto)
JOIN FRUTAS
USING(FechaProducto)
")
rm(ABARROTES)
rm(GRANOS)
rm(FRUTAS)
rm(CARNICOS)
rm(HORTALIZAS)
rm(sub_list)
rm(sublist_name)
supermarket_price_variability <- sapply( subset(clean_supermarket_prices, select = -FechaProducto), mad, na.rm = TRUE)
supermarket_price_variability <- c(supermarket_price_variability)
names(supermarket_price_variability) <- colnames(subset(clean_supermarket_prices, select = -FechaProducto))
path <- "PNM_supermercados_2007-2023.xlsx"
supermarket <- path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel,
path = path)
#Separate each table from the supermarket file into its own table
sub_list <- lapply(supermarket, as.data.frame)
for (i in 1:length(sub_list)){
sublist_name <- names(sub_list)[i]
assign(sublist_name, sub_list[[i]])
}
#Cleaning special characters from all tables
colnames(ABARROTES) <- colnames(ABARROTES) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(GRANOS)<- colnames(GRANOS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(CARNICOS)<- colnames(CARNICOS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(HORTALIZAS)<- colnames(HORTALIZAS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(FRUTAS)<- colnames(FRUTAS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
#Grouping all prices into a single table
clean_supermarket_prices <- sqldf("SELECT * FROM ABARROTES
JOIN GRANOS
USING(FechaProducto)
JOIN CARNICOS
USING(FechaProducto)
JOIN HORTALIZAS
USING(FechaProducto)
JOIN FRUTAS
USING(FechaProducto)
")
rm(ABARROTES)
rm(GRANOS)
rm(FRUTAS)
rm(CARNICOS)
rm(HORTALIZAS)
rm(sub_list)
rm(sublist_name)
supermarket_price_variability <- data.frame(sapply( subset(clean_supermarket_prices, select = -FechaProducto), mad, na.rm = TRUE))
names(supermarket_price_variability) <- colnames(subset(clean_supermarket_prices, select = -FechaProducto))
View(supermarket_price_variability)
#External data: Supermarkets price monitoring, source: CNP https://www.cnp.go.cr/sim/Precios_Nac_Mensuales.aspx
path <- "PNM_supermercados_2007-2023.xlsx"
supermarket <- path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel,
path = path)
#Separate each table from the supermarket file into its own table
sub_list <- lapply(supermarket, as.data.frame)
for (i in 1:length(sub_list)){
sublist_name <- names(sub_list)[i]
assign(sublist_name, sub_list[[i]])
}
#Cleaning special characters from all tables
colnames(ABARROTES) <- colnames(ABARROTES) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(GRANOS)<- colnames(GRANOS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(CARNICOS)<- colnames(CARNICOS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(HORTALIZAS)<- colnames(HORTALIZAS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(FRUTAS)<- colnames(FRUTAS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
#Grouping all prices into a single table
clean_supermarket_prices <- sqldf("SELECT * FROM ABARROTES
JOIN GRANOS
USING(FechaProducto)
JOIN CARNICOS
USING(FechaProducto)
JOIN HORTALIZAS
USING(FechaProducto)
JOIN FRUTAS
USING(FechaProducto)
")
rm(ABARROTES)
rm(GRANOS)
rm(FRUTAS)
rm(CARNICOS)
rm(HORTALIZAS)
rm(sub_list)
rm(sublist_name)
supermarket_price_variability <- transpose(data.frame(sapply( subset(clean_supermarket_prices, select = -FechaProducto), mad, na.rm = TRUE)))
names(supermarket_price_variability) <- colnames(subset(clean_supermarket_prices, select = -FechaProducto))
View(supermarket_price_variability)
#External data: Supermarkets price monitoring, source: CNP https://www.cnp.go.cr/sim/Precios_Nac_Mensuales.aspx
path <- "PNM_supermercados_2007-2023.xlsx"
supermarket <- path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel,
path = path)
#Separate each table from the supermarket file into its own table
sub_list <- lapply(supermarket, as.data.frame)
for (i in 1:length(sub_list)){
sublist_name <- names(sub_list)[i]
assign(sublist_name, sub_list[[i]])
}
#Cleaning special characters from all tables
colnames(ABARROTES) <- colnames(ABARROTES) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(GRANOS)<- colnames(GRANOS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(CARNICOS)<- colnames(CARNICOS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(HORTALIZAS)<- colnames(HORTALIZAS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
colnames(FRUTAS)<- colnames(FRUTAS) %>% gsub(" ", "_", .) %>% gsub("-", "", .) %>% gsub("/", "", .)
#Grouping all prices into a single table
clean_supermarket_prices <- sqldf("SELECT * FROM ABARROTES
JOIN GRANOS
USING(FechaProducto)
JOIN CARNICOS
USING(FechaProducto)
JOIN HORTALIZAS
USING(FechaProducto)
JOIN FRUTAS
USING(FechaProducto)
")
rm(ABARROTES)
rm(GRANOS)
rm(FRUTAS)
rm(CARNICOS)
rm(HORTALIZAS)
rm(sub_list)
rm(sublist_name)
supermarket_price_variability <- data.frame(transpose(data.frame(sapply( subset(clean_supermarket_prices, select = -FechaProducto), mad, na.rm = TRUE))))
names(supermarket_price_variability) <- colnames(subset(clean_supermarket_prices, select = -FechaProducto))
View(supermarket_price_variability)
supermarket_price_variability <- transpose(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE))
supermarket_price_variability <- sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE)
supermarket_price_variability <- list(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE))
View(supermarket_price_variability)
supermarket_price_variability <- order(list(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE)))
supermarket_price_variability <- sort(list(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE)))
supermarket_price_variability <- sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE))
View(supermarket)
supermarket_price_variability <- list(sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE)))
View(supermarket_price_variability)
supermarket_price_variability <- list(sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE)), decreasing = T)
View(supermarket_price_variability)
supermarket_price_variability <- list(sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE)), decreasing  = TRUE)
View(supermarket_price_variability)
supermarket_price_variability <- sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE), decreasing =T)
supermarket_price_variability <- list(sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE), decreasing =T))
View(supermarket_price_variability)
names(supermarket_price_variability) <- colnames(subset(clean_supermarket_prices, select = -FechaProducto))
View(supermarket_price_variability)
View(supermarket_price_variability)
supermarket_price_variability[[1]][["Posta_de_res"]]
supermarket_price_variability[[1]]
supermarket_price_variability <- supermarket_price_variability[[1]]
supermarket_price_variability <- list(supermarket_price_variability[[1]])
View(supermarket_price_variability)
View(supermarket_price_variability)
View(clean_supermarket_prices)
View(supermarket_price_variability)
View(supermarket)
View(supermarket_price_variability)
supermarket_price_variability <- list(sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE), decreasing =T))
View(supermarket_price_variability)
View(clean_supermarket_prices)
coalesce(subset(clean_supermarket_prices,
select = -FechaProducto))
View(avg_basket_by_cuisine)
View(avg_basket_by_cuisine)
sqldf("SELECT cuisine, avg(basket) as avg_basket, count(distinct(order_id)) avg(total_eater_promos) as avg_promo FROM base_data_set
WHERE basket > 0
GROUP BY cuisine
ORDER by avg_basket DESC
")
sqldf("SELECT cuisine, avg(basket) as avg_basket, count(distinct(order_id)), avg(total_eater_promos) as avg_promo FROM base_data_set
WHERE basket > 0
GROUP BY cuisine
ORDER by avg_basket DESC
")
avg_basket_by_cuisine <- sqldf("SELECT cuisine, avg(basket) as avg_basket, count(distinct(order_id)), avg(total_eater_promos) as avg_promo FROM base_data_set
WHERE basket > 0
GROUP BY cuisine
ORDER by avg_basket DESC
")
View(avg_basket_by_cuisine)
avg_basket_by_cuisine <- sqldf("SELECT cuisine, avg(basket) as avg_basket, count(distinct(order_id)) as total_orders, avg(total_eater_promos) as avg_promo FROM base_data_set
WHERE basket > 0
GROUP BY cuisine
ORDER by avg_basket DESC
")
View(base_data_set)
#Asuming a 30% fee rate from UberEats
expected_income <- sum(supermarket_price_variability * 0.30)
supermarket_price_variability <- transpose(list(sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE), decreasing =T)))
#Asuming a 16% fee rate from Cornershop delivery fee
expected_income <- supermarket_price_variability * 0.16
View(supermarket_price_variability)
supermarket_price_variability <- list(sort(sapply(subset(clean_supermarket_prices,
select = -FechaProducto),
mad, na.rm = TRUE), decreasing =T))
View(supermarket_price_variability)
test <- unlist(supermarket_price_variability)
test2 <- test * 0.16
test2 <- sum(test * 0.16)
test2 <- sum(test * 0.16) *10000
test2 <- sum(test * 0.16) * 5141
View(avg_basket_by_cuisine)
#Hipotesis: Is there an specifc time of the day in which there are more orders place?
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_point()+ geom_smooth(method = lm)
#Hipotesis: Is there an specifc time of the day in which there are more orders place?
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_point()+ geom_smooth(method = lm)
View(avg_rev_by_user_top10)
View(avg_rev_by_cuisine)
View(avg_basket_by_cuisine)
ggplot(data = base_data_set, aes(x = time, y = basket - total_eater_promos, col = cuisine))+
geom_point()
View(base_data_set)
#Which cuisine drive the most revenue?
ggplot(data = base_data_set, aes(x = cuisine, y = (basket + total_eater_promos), fill = cuisine))+
geom_boxplot()
#Hipotesis: Is there an specifc time of the day in which there are more orders place?
ggplot(data = base_data_set, aes(x = time, y = basket + total_eater_promos, col = cuisine))+
geom_point()
View(avg_rev_by_user_top10)
View(avg_rev_by_cuisine)
View(avg_basket_by_cuisine)
ggplot(data = base_data_set, aes(x = time, y = basket - total_eater_promos, col = cuisine))+
geom_point()+ geom_text(aes(label = re_infra_education$Country_Code), nudge_x = 2,
nudge_y = 2, check_overlap = TRUE)+
ylab("Percepcion de la calidad de la Infraestructura Educativa")+ labs(caption = "Fuente: OECD, Pruebas PISA 2018 - Banco Mundial")+
labs(title ="Relación Gasto en la Educacion - Calidad de la Infraestructura Educativa ")+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
ggplot(data = base_data_set, aes(x = time, y = basket - total_eater_promos, col = cuisine))+
geom_point()+ geom_text(aes(label = re_infra_education$Country_Code), nudge_x = 2,
nudge_y = 2, check_overlap = TRUE)
ggplot(data = base_data_set, aes(x = time, y = basket - total_eater_promos, col = cuisine))+
geom_point()+ geom_text(aes(label = time), nudge_x = 2,
nudge_y = 2, check_overlap = TRUE)
ggplot(data = base_data_set, aes(x = time, y = count(order_id), col = cuisine))+
geom_bar()+
ggplot(data = base_data_set, aes(x = time, y = count(order_id), col = cuisine))+
geom_bar()
ggplot(data = base_data_set, aes(x = time, y = count(order_id), col = cuisine))+
geom_bar()
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_bar()
ggplot(data = base_data_set, aes(x = time, y = basket, fill = cuisine))+
geom_bar()
ggplot(data = base_data_set, aes(x = time, y = basket, fill = cuisine))+
geom_line()
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_point(data = base_data_set %>% filter(time == x_highlight),
aes(x = time, y = basket),
col = "red", size = 3)
View(base_data_set)
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_point(data = base_data_set %>% filter(time == 00:14:53),
aes(x = time, y = basket),
col = "red", size = 3)
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_vline(xintercept = 0:14:53, col = "red", linetype = "dashed")
typeof(base_data_set$time)
typeof(as.POSIXlt(base_data_set$time))
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_vline(xintercept = 10, col = "red", linetype = "dashed")
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_vline(xintercept = 13:21:17, col = "red", linetype = "dashed")
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_vline(xintercept = "13:21:17", col = "red", linetype = "dashed")
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_vline(xintercept = "15:39:00", col = "red", linetype = "dashed")
#Hipotesis: Is there an specifc time of the day in which there are more orders place?
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:01:42", col = "red", linetype = "dashed")
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:14:00", col = "red", linetype = "dashed")
ggplot(data = base_data_set, aes(x = time, y = basket, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:30:00", col = "red", linetype = "dashed")
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:30:06", col = "red", linetype = "dashed")+
ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour")+
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:30:06", col = "red", linetype = "dashed")+
annotate(geom="text", x=3, y=30, label="17:30:06",
color="red")
#Hipotesis: Is there an specifc time of the day in which there are more orders place?
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:30:06", col = "red", linetype = "dashed")+
annotate(geom="text", x=100, y=780, label="17:30:06",
color="red")
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:30:06", col = "red", linetype = "dashed")+
annotate(geom="text", x=500, y=780, label="17:30:06",
color="red")
ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:30:06", col = "red", linetype = "dashed")+
annotate(geom="text", x=1500, y=780, label="17:30:06",
color="red")+
ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:30:06", col = "red", linetype = "dashed")+
annotate(geom="text", x=3500, y=780, label="17:30:06",
color="red")+
ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:30:06", col = "red", linetype = "dashed")+
annotate(geom="text", x=3800, y=780, label="17:30:06",
color="red")+
ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour") +
theme(plot.title = element_text())
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:45:55", col = "red", linetype = "dashed")+
annotate(geom="text", x=4000, y=780, label="17:45:55",
color="red")+
ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:45:55", col = "red", linetype = "dashed")+
annotate(geom="text", x=4000, y=780, label="17:45:55",
color="red")+
ylab("Total Revenue")+ ylab("Time of the day")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour") +
theme(plot.title = element_text(hjust = 0.5))
#Hipotesis: Is there an specifc time of the day in which there are more orders place?
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:45:55", col = "red", linetype = "dashed")+
annotate(geom="text", x=4000, y=780, label="17:45:55",
color="red")+
ylab("Total Revenue")+ xlab("Time of the day")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = base_data_set, aes(x = cuisine, y = (basket - total_eater_promos), fill = cuisine))+
geom_boxplot()
ggplot(data = base_data_set, aes(x = cuisine, y = (basket - total_eater_promos), fill = cuisine))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
View(supermarket_price_variability)
View(clean_supermarket_prices)
write.csv(clean_supermarket_prices, file = "data1.csv", row.names = FALSE)
write.csv(supermarket_price_variability, file = "data2.csv", row.names = FALSE)
View(supermarket_price_variability)
names(supermarket_price_variability)
sqldf("SELECT count(distinct(order_id) from base_data_set
group by user_id")
sqldf("SELECT user_id,count(distinct(order_id) from base_data_set
group by user_id")
sqldf("SELECT user_id,count(distinct(order_id) from base_data_set
group by user_id")
sqldf("SELECT user_id, count(distinct(order_id)) FROM base_data_set
group by user_id")
sqldf("SELECT  count(distinct(order_id)) FROM base_data_set
group by user_id")
sqldf("SELECT  median(count(distinct(order_id))) FROM base_data_set
group by user_id")
sqldf("SELECT  avg(count(distinct(order_id))) FROM base_data_set
group by user_id")
sqldf("SELECT  count(distinct(order_id))) FROM base_data_set
group by user_id")
sqldf("SELECT count(distinct(order_id)) FROM base_data_set
group by user_id")
distinct_orders <- sqldf("SELECT count(distinct(order_id)) FROM base_data_set
group by user_id")
avg(distinct_orders)
mean(distinct_orders)
View(distinct_orders)
distinct_orders <- sqldf("SELECT count(distinct(order_id)) as distinct_orders FROM base_data_set
group by user_id")
mean(distinct_orders)
distinct_orders <- sqldf("SELECT count(distinct(order_id)) as orders FROM base_data_set
group by user_id")
mean(distinct_orders$orders)
median(distinct_orders$orders)
distinct_orders <- sqldf("SELECT count(distinct(order_id)) as orders FROM base_data_set
group by user_id")
mean(distinct_orders$orders)
