GROUP BY category
ORDER by rev DESC
")
avg_rev_by_user_top10_category <- sqldf("SELECT user_id, avg(basket - total_eater_promos) as rev FROM new_data_set
WHERE basket > 0
GROUP BY user_id
ORDER by rev DESC
Limit 10
")
View(avg_rev_by_user_top10_category)
View(avg_rev_by_category)
avg_basket_by_category <- sqldf("SELECT category, avg(basket) as avg_basket, count(distinct(order_id)) as total_orders, avg(total_eater_promos) as avg_promo FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by avg_basket DESC
")
View(avg_basket_by_category)
View(avg_basket_by_cuisine)
#Load the Uber provided data
new_data_set <- data.frame(read_excel("Take Home Exercise - NV Territory Analyst, Uber Eats CenAm - Data Set.xlsx"))
new_data_set <- new_data_set %>%
separate(. , date, into = c("date", "time"), sep = " ") %>%
na.omit(.) %>%
mutate_at(vars(basket, total_eater_promos),
~currency(., format = "f", digits = 2)) %>%
na.omit(.)
new_data_set
new_data_set.show()
show(new_data_set)
show(new_data_set)
View(new_data_set)
View(base_data_set)
View(new_data_set)
new_data_set <- data.frame(read_excel("Take Home Exercise - NV Territory Analyst, Uber Eats CenAm - Data Set.xlsx"))
new_data_set <- new_data_set %>%
separate(. , date, into = c("date", "time"), sep = " ") %>%
na.omit(.) %>%
mutate_at(vars(basket, total_eater_promos),
~currency(., format = "f", digits = 2)) %>%
na.omit(.)
#Exploratory Analysis
avg_basket_by_category <- sqldf("SELECT category, avg(basket) as avg_basket, count(distinct(order_id)) as total_orders, avg(total_eater_promos) as avg_promo FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by avg_basket DESC
")
avg_rev_by_category <- sqldf("SELECT category, avg(basket - total_eater_promos) as rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by rev DESC
")
avg_rev_by_user_top10_category <- sqldf("SELECT user_id, avg(basket - total_eater_promos) as rev FROM new_data_set
WHERE basket > 0
GROUP BY user_id
ORDER by rev DESC
Limit 10
")
View(new_data_set)
typeof(new_data_set$total_eater_promos)
View(avg_rev_by_user_top10)
avg_basket_by_category <- sqldf("SELECT category, avg(basket) as avg_basket, count(distinct(order_id)) as total_orders, avg(total_eater_promos) as avg_promo FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by avg_basket DESC
")
avg_rev_by_category <- sqldf("SELECT category, avg(total_eater_promos/basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by rev DESC
")
avg_rev_by_user_top10_category <- sqldf("SELECT user_id, avg(basket - total_eater_promos) as rev FROM new_data_set
WHERE basket > 0
GROUP BY user_id
ORDER by rev DESC
Limit 10
")
View(avg_rev_by_category)
data.frame(sqldf("SELECT category, avg(total_eater_promos/basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by rev DESC
")) %>% abs(.["rev"])
avg_rev_by_category <- data.frame(sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by rev DESC
"))
View(avg_basket_by_category)
View(avg_rev_by_category)
View(avg_basket_by_category)
avg_rev_by_category <- data.frame(sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discount_as_%_of_rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by _of_rev DESC
View(avg_rev_by_category)
avg_rev_by_category <- data.frame(sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discount_as_%_of_rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discount_as_%_of_rev DESC
"))
avg_rev_by_category <- data.frame(sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discount_as_per_of_rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discount_as_per_of_rev DESC
"))
View(avg_rev_by_category)
View(avg_rev_by_category)
View(avg_basket_by_category)
View(avg_basket_by_category)
View(avg_basket_by_cuisine)
)
avg_rev_by_category <- data.frame(sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discount_as_per_of_rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discount_as_per_of_rev DESC
"))
avg_rev_by_category <- sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discount_as_per_of_rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discount_as_per_of_rev DESC
")
avg_rev_by_category <- sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discount_rev FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discount_rev DESC
")
avg_rev_by_category <- sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discounted_per DESC
")
avg_rev_by_category <- sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discounted_per DESC
")
sqldf("SELECT category, avg(basket) as avg_basket, count(distinct(order_id)) as total_orders, avg(total_eater_promos) as avg_promo FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by avg_basket DESC
")
library(sqldf)
avg_rev_by_category <- sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discounted_per DESC
")
source("C:/Users/Dell Latitud E7450/Desktop/UberTest/UberAnalysis.R", echo=TRUE)
source("C:/Users/Dell Latitud E7450/Desktop/UberTest/UberAnalysis.R", echo=TRUE)
View(avg_rev_by_category)
avg_rev_by_user_top10_category <- sqldf("SELECT user_id, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY user_id
ORDER by rev DESC
Limit 10
")
View(avg_rev_by_user_top10_category)
avg_rev_by_user_top10_category <- sqldf("SELECT user_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY user_id
ORDER by rev DESC
Limit 10
")
avg_rev_by_user_top10_category <- sqldf("SELECT user_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY user_id, category
ORDER by rev DESC
Limit 10
")
avg_rev_by_user_top10_category <- sqldf("SELECT user_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY user_id, category
ORDER by rev DESC
Limit 100
")
avg_rev_by_user_top10_category <- sqldf("SELECT order_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY user_id, category
ORDER by rev DESC
Limit 100
")
source("C:/Users/Dell Latitud E7450/Desktop/UberTest/UberAnalysis.R", echo=TRUE)
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER by rev DESC
Limit 100
")
sqldf("SELECT order_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER by rev DESC
Limit 100
")
sqldf("SELECT order_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
sqldf("SELECT order_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100 ")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY sum(basket) DESC
Limit 100
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as a FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY sum(basket) DESC
Limit 100
")
avg_rev_by_category <- sqldf("SELECT category, ABS(avg(total_eater_promos/basket)) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by discounted_per DESC
")
avg_basket_by_category <- sqldf("SELECT category, avg(basket) as avg_basket, count(distinct(order_id)) as total_orders, avg(total_eater_promos) as avg_promo FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by avg_basket DESC
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
View(avg_rev_by_order_top100_category)
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, ABS(avg(total_eater_promos/basket)) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, total_eater_promos, (total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, total_eater_promos FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
str(new_data_set$total_eater_promos)
sqldf("SELECT order_id, category, sum(basket) as rev FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 100
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
Limit 1000
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos/basket) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, total_eater_promos ,sum(total_eater_promos/basket) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, total_eater_promos ,sum(total_eater_promos/basket) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
avg_rev_by_order_top100_category <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) ,sum(total_eater_promos/basket) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
b <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) ,sum(total_eater_promos/basket) FROM base_data_set
WHERE basket > 0
GROUP BY order_id, cuisine
ORDER BY rev DESC
")
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) ,sum(total_eater_promos/basket) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
b <- sqldf("SELECT order_id, cuisine, sum(basket) as rev, sum(total_eater_promos) ,sum(total_eater_promos/basket) FROM base_data_set
WHERE basket > 0
GROUP BY order_id, cuisine
ORDER BY rev DESC
")
View(b)
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) ,ABS(total_eater_promos/basket) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
View(a)
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) ,ABS(total_eater_promos/basket,2) FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
") %>% double(.["discounted_per"])
sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
") %>% mutate(as.double( discounted_per) )
dataframe(sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
"))
data.frame(sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
"))
data.frame(sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
"))
sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
")
sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
") %>% mutate(as.double( discounted_per) )
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0
GROUP BY order_id, category
ORDER BY rev DESC
") %>% mutate(as.double(discounted_per))
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per != 1
GROUP BY order_id, category
ORDER BY rev DESC
") %>% mutate(as.double(discounted_per))
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per != 1
GROUP BY order_id, category
ORDER BY rev DESC
") %>% transmutate(as.double(discounted_per))
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per != 1
GROUP BY order_id, category
ORDER BY rev DESC
") %>% transmute(as.double(discounted_per))
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per != 1
GROUP BY order_id, category
ORDER BY rev DESC
") %>% mutate(as.double(discounted_per)) %>% mutate(discounted_per = NULL)
a <- sqldf("SELECT order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per <= 0.4999999
GROUP BY order_id, category
ORDER BY rev DESC
") %>% mutate(as.double(discounted_per)) %>% mutate(discounted_per = NULL)
a <- sqldf("SELECT date, order_id, category, sum(basket) as rev, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per <= 0.4999999
GROUP BY order_id, category
ORDER BY rev DESC
") %>% mutate(as.double(discounted_per)) %>% mutate(discounted_per = NULL)
b <- ggplot(data = new_data_set, aes(x = category, y = rev, fill = cuisine))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by category type") +
theme(plot.title = element_text(hjust = 0.5))
View(b)
b <- ggplot(data = new_data_set, aes(x = category, y = rev, fill = cuisine))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by category type") +
theme(plot.title = element_text(hjust = 0.5))
b <- ggplot(data = new_data_set, aes(x = category, y = rev, fill = category))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by category type") +
theme(plot.title = element_text(hjust = 0.5))
#Hipotesis: Is there an specifc time of the day in which there are more orders place?
ggplot(data = base_data_set, aes(x = time, y = basket-total_eater_promos, col = cuisine))+
geom_line()+
geom_vline(xintercept = "17:45:55", col = "red", linetype = "dashed")+
annotate(geom="text", x=4000, y=780, label="17:45:55",
color="red")+
ylab("Total Revenue")+ xlab("Time of the day")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by the Hour") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = base_data_set, aes(x = cuisine, y = (basket - total_eater_promos), fill = cuisine))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = new_data_set, aes(x = category, y = rev, fill = category)) +
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by category type") +
theme(plot.title = element_text(hjust = 0.5))
a <- sqldf("SELECT date, order_id, category, sum(basket) as revenue, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per <= 0.4999999
GROUP BY order_id, category
ORDER BY revenue DESC
") %>% mutate(as.double(discounted_per)) %>% mutate(discounted_per = NULL)
ggplot(data = new_data_set, aes(x = category, y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = a, aes(x = category, y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
a <- sqldf("SELECT date, order_id, category, sum(basket) as revenue, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per <= 0.4999999
GROUP BY order_id
ORDER BY revenue DESC
") %>% mutate(as.double(discounted_per)) %>% mutate(discounted_per = NULL)
ggplot(data = a, aes(x = category, y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
a <- sqldf("SELECT date, order_id, category, sum(basket) as revenue, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per <= 0.4999999
GROUP BY order_id
ORDER BY revenue
") %>% mutate(as.double(discounted_per)) %>% mutate(discounted_per = NULL)
ggplot(data = a, aes(x = category, y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
a <- sqldf("SELECT date, order_id, category, sum(basket) as revenue, sum(total_eater_promos) , ABS(total_eater_promos/basket) as discounted_per FROM new_data_set
WHERE basket > 0 AND discounted_per <= 0.4999999
GROUP BY order_id
ORDER BY revenue DESC
") %>% mutate(as.double(discounted_per)) %>% mutate(discounted_per = NULL)
ggplot(data = a, aes(x = category, y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
source("C:/Users/Dell Latitud E7450/Desktop/UberTest/UberAnalysis.R", echo=TRUE)
ggplot(data = a, aes(x = reorder(category, revenue), y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue")+ labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
#Exporting new data seet
write.csv(a, file = "data3.csv", row.names = FALSE)
ggplot(data = a, aes(x = reorder(category, revenue), y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue") + xlab("Category") + labs(caption = "Source: Internal data")+
labs(title ="Revenue by cuisine type") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = a, aes(x = reorder(category, revenue), y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue") + xlab("Category") + labs(caption = "Source: Internal data")+
labs(title ="Revenue by Category") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = a, aes(x = reorder(category, revenue), y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue") + xlab("Category") + labs(caption = "Source: Internal data")+
labs(title ="Revenue by Category") +
theme(plot.title = element_text(hjust = 0.5),legend.position = "none")
ggplot(data = a, aes(x = reorder(category, revenue), y = revenue, fill = revenue))+
geom_boxplot() + ylab("Total Revenue") + xlab("Category") + labs(caption = "Source: Internal data")+
labs(title ="Revenue by Category") +
theme(plot.title = element_text(hjust = 0.5),legend.position = "none")
ggplot(data = a, aes(x = reorder(category, revenue), y = revenue, fill = category))+
geom_boxplot() + ylab("Total Revenue") + xlab("Category") + labs(caption = "Source: Internal data")+
labs(title ="Revenue by Category") +
theme(plot.title = element_text(hjust = 0.5),legend.position = "none")
View(new_data_set)
#Exploratory Analysis
avg_basket_by_category <- sqldf("SELECT category, avg(basket) as avg_basket, count(distinct(order_id)) as total_orders, avg(total_eater_promos) as avg_promo FROM new_data_set
WHERE basket > 0
GROUP BY category
ORDER by avg_basket DESC
")
View(avg_basket_by_category)
sum(avg_basket_by_category$total_orders)
